language: cpp

dist: xenial

matrix:
  include:

    # Coverage

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-7', 'g++-7']
      before_script:
        - pip install --user cpp-coveralls
      after_success:
        - coveralls --root . -e tests -e lib -E ".*CMakeFiles.*"
      env:
        - MATRIX_EVAL="CMAKE_OPTIONS=-DCOVERAGE=ON && CC=gcc-7 && CXX=g++-7"

    # Linux: clang

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-6.0
          packages:
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-7.0
          packages:
            - clang-7.0
      env:
        - MATRIX_EVAL="CC=clang-7.0 && CXX=clang++-7.0"

    # Linux: gcc

    - os: linux
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-7', 'g++-7']

    - os: linux
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-8', 'g++-8']

    # macOS: clang

    - os: osx
      osx_image: xcode9

    - os: osx
      osx_image: xcode9.1

    - os: osx
      osx_image: xcode9.2

    - os: osx
      osx_image: xcode9.3

    - os: osx
      osx_image: xcode9.4

    - os: osx
      osx_image: xcode10

    - os: osx
      osx_image: xcode10.1

    # macOS: gcc

    - os: osx
      osx_image: xcode10
      env:
        - MATRIX_EVAL="brew install gcc@7 && CC=gcc-7 && CXX=g++-7"

    - os: osx
      osx_image: xcode10
      env:
        - MATRIX_EVAL="brew install gcc@8 && CC=gcc-8 && CXX=g++-8"


before_install:
  - eval "${MATRIX_EVAL}"

script:
  - cmake ${CMAKE_OPTIONS} -DEXECUTABLE=OFF .
  - cmake --build .
  - ./sherpa_41-test