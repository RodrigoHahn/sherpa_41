language: cpp

matrix:
  include:

    # Coverage

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-7', 'g++-7']
      before_script:
        - pip install --user cpp-coveralls
      after_success:
        - coveralls --root . -e tests -e lib -E ".*CMakeFiles.*"
      env:
        - MATRIX_EVAL="CMAKE_OPTIONS=-DCOVERAGE=ON && CC=gcc-7 && CXX=g++-7"

    # macOS : clang

    - os: osx
      osx_image: xcode6.4

    - os: osx
      osx_image: xcode7.3

    - os: osx
      osx_image: xcode8

    - os: osx
      osx_image: xcode8.3

    - os: osx
      osx_image: xcode9

    - os: osx
      osx_image: xcode9.1

    - os: osx
      osx_image: xcode9.2

    - os: osx
      osx_image: xcode9.3

    - os: osx
      osx_image: xcode9.4

    - os: osx
      osx_image: xcode10

    - os: osx
      osx_image: xcode10.1

      #macOS : gcc

    - os: osx
      osx_image: xcode10
      env:
        - MATRIX_EVAL="brew install gcc@4.9 CC=gcc-4.9 && CXX=g++-4.9"

    - os: osx
      osx_image: xcode10
      env:
        - MATRIX_EVAL="brew install gcc@5 && CC=gcc-5 && CXX=g++-5"

    - os: osx
      osx_image: xcode10
      env:
        - MATRIX_EVAL="brew install gcc@6 && CC=gcc-6 && CXX=g++-6"

    - os: osx
      osx_image: xcode10
      env:
        - MATRIX_EVAL="brew install gcc@7 && CC=gcc-7 && CXX=g++-7"

    - os: osx
      osx_image: xcode10
      env:
        - MATRIX_EVAL="brew install gcc@8 && CC=gcc-8 && CXX=g++-8"

    # Linux : clang

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      env:
        - MATRIX_EVAL="CC=clang-3.7 && CXX=clang++-3.7"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

    # Linux : gcc

    - os: linux
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-4.9', 'g++-4.9']

    - os: linux
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-5', 'g++-5']

    - os: linux
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-6', 'g++-6']

    - os: linux
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-7', 'g++-7']

    - os: linux
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-8', 'g++-8']


before_install:
  - eval "${MATRIX_EVAL}"

script:
  - cmake ${CMAKE_OPTIONS} -DEXECUTABLE=OFF .
  - cmake --build .
  - ./sherpa_41-test